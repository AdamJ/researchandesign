"use strict";(self.webpackChunkresearchandesign=self.webpackChunkresearchandesign||[]).push([[7424],{6723:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=s(4848),t=s(8453);const o={sidebar_position:2},r="Configurations",a={id:"scripts-and-configs/configs",title:"Configurations",description:'This is a basic configuration starter "package" for setting up a new Mac environment, according to what I need. Having always needed to configure everything by hand along with referring (or trying to remember) older machine configurations, this helps me get going quickly.',source:"@site/docs/scripts-and-configs/configs.md",sourceDirName:"scripts-and-configs",slug:"/scripts-and-configs/configs",permalink:"/researchandesign/docs/scripts-and-configs/configs",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Scripts",permalink:"/researchandesign/docs/scripts-and-configs/scripts"},next:{title:"Homebrew",permalink:"/researchandesign/docs/scripts-and-configs/homebrew"}},l={},c=[{value:"Items",id:"items",level:2},{value:"gitconfig",id:"gitconfig",level:3},{value:"gitignore",id:"gitignore",level:3},{value:"vimrc",id:"vimrc",level:3},{value:"zshrc",id:"zshrc",level:3}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"configurations",children:"Configurations"})}),"\n",(0,i.jsx)(e.p,{children:'This is a basic configuration starter "package" for setting up a new Mac environment, according to what I need. Having always needed to configure everything by hand along with referring (or trying to remember) older machine configurations, this helps me get going quickly.'}),"\n",(0,i.jsxs)(e.p,{children:["You can also find this information under ",(0,i.jsx)(e.a,{href:"https://github.com/AdamJ/config",title:"Link to my config repo",children:"AdamJ/config"})]}),"\n",(0,i.jsx)(e.h2,{id:"items",children:"Items"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Software downloads"}),"\n",(0,i.jsx)(e.li,{children:"Install & configure iTerm 2"}),"\n",(0,i.jsxs)(e.li,{children:["Install ",(0,i.jsx)(e.strong,{children:"ZSH"})," and ",(0,i.jsx)(e.strong,{children:"OhMyZSH"})]}),"\n",(0,i.jsx)(e.li,{children:"Configure GitHub access"}),"\n",(0,i.jsx)(e.li,{children:"Dev environment setup"}),"\n",(0,i.jsxs)(e.li,{children:["Configure Node using ",(0,i.jsx)(e.strong,{children:"NVM"})]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"gitconfig",children:"gitconfig"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'[filter "lfs"]\n    required = true\n    clean = git-lfs clean -- %f\n    smudge = git-lfs smudge -- %f\n    process = git-lfs filter-process\n[user]\n    name = [INSERT NAME]\n    email = [INSERT EMAIL]\n[core]\n    excludesfile = /Users/[INSERT NAME]/.gitignore_global\n[difftool "sourcetree"]\n    cmd = opendiff \\"$LOCAL\\" \\"$REMOTE\\"\n    path =\n[mergetool "sourcetree"]\n    cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \\"$LOCAL\\" \\"$REMOTE\\" -ancestor \\"$BASE\\" -merge \\"$MERGED\\"\n    trustExitCode = true\n[commit]\n    template = /Users/[INSERT NAME]/.stCommitMsg\n'})}),"\n",(0,i.jsx)(e.h3,{id:"gitignore",children:"gitignore"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"  **/node_modules/**\n  .git\n  .DS_Store\n  .idea\n  npm-debug.log.*\n  **/.cache/**\n  # Ignore sketch files\n  *.sketch\n"})}),"\n",(0,i.jsx)(e.h3,{id:"vimrc",children:"vimrc"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-vim",children:'  syntax on\n  set showmatch\n  set t_Co=256\n\n  " Use Vim, not Vi\n  set nocompatible\n\n  " Use UTF-8 by default\n  set encoding=utf-8\n  set fileencoding=utf-8\n\n  " Show status line\n  set laststatus=2\n  set showmode\n  set ruler\n  set cursorline\n'})}),"\n",(0,i.jsx)(e.h3,{id:"zshrc",children:"zshrc"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'# If you come from bash you might have to change your $PATH.\n# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH\n\n# Path to your oh-my-zsh installation.\nexport ZSH="$HOME/.oh-my-zsh"\n\n# Set name of the theme to load --- if set to "random", it will\n# load a random theme each time oh-my-zsh is loaded, in which case,\n# to know which specific one was loaded, run: echo $RANDOM_THEME\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\nZSH_THEME="robbyrussell"\n\n# Which plugins would you like to load?\n# Standard plugins can be found in $ZSH/plugins/\n# Custom plugins may be added to $ZSH_CUSTOM/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\n# Add wisely, as too many plugins slow down shell startup.\nplugins=(git nvm)\n\nsource $ZSH/oh-my-zsh.sh\n\n# User configuration\n\n# export MANPATH="/usr/local/man:$MANPATH"\n\n# You may need to manually set your language environment\n# export LANG=en_US.UTF-8\n\n# Preferred editor for local and remote sessions\n# if [[ -n $SSH_CONNECTION ]]; then\n#   export EDITOR=\'vim\'\n# else\n#   export EDITOR=\'mvim\'\n# fi\n\n# Compilation flags\n# export ARCHFLAGS="-arch x86_64"\n\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\n# For a full list of active aliases, run `alias`.\n#\n# Example aliases\n# alias zshconfig="mate ~/.zshrc"\n# alias ohmyzsh="mate ~/.oh-my-zsh"\nalias gs="git status"\nalias ga="git add ."\nalias gpom="git pull --rebase origin main"\nalias gl="git log --graph --decorate --oneline"\n\nexport NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"\n[ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh" # This loads nvm\n'})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>a});var i=s(6540);const t={},o=i.createContext(t);function r(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);